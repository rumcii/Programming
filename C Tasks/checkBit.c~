/*Напишете израз, който да проверява дали третия бит на дадено число е*/
/*1 или 0.*/

#include <stdio.h>

int toBits(int);
int check(int, int, int);
void reverse (char*, int);
int toInt(char*);

main()
{
    int n;
    int digit;
    int position;
    
    printf("\nEnter number: ");
    scanf("%d", &n);
    printf("Enter searching digit: ");
    scanf("%d", &digit);
    printf("Enter searching position: ");
    scanf("%d", &position);
    
    if (check(toBits(n), digit, position)) {
        printf("\nDigit found.\n\n");
    }
    else {
        printf("\nDigit not found.\n\n");
    }
}

int toBits(int n)
{
    char bits[50];
    int digit;
    int i = 0;
    int result;
    
    while (n != 0) {
        digit = n % 2;
        n = n / 2;
        
        bits[i++] = digit + '0';
    }
    
    bits[i] = '\0';
    
    reverse(bits, i);
    
    result = (toInt(bits));
    
    return result;
}

void reverse(char arr[], int n)
{
    int i;
    int j;
    int temp;
    
    for (i = 0, j = n - 1; i < j; i++, j--) {
        temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
}

int toInt(char arr[])
{
    int result = 0;
    int i;
    
    for (i = 0; arr[i] != '\0'; i++) {
        if (arr[i] == '0' && arr[i - 1] != '0' && arr[i + 1] != '\0') {
            result = result * 100;
        }
        else if(arr[i] != '1' && arr[i + 2] == '0') {
            result = result * 100;
        }
        else if (arr[i] == '1') {
            result = result * 10 + (arr[i] - '0');
        }
    }
    return result;
}

int check(int n, int digit, int position)
{
    int i = 0;
    int d;
    
    while (i < position) {
        d = n % 10;
        n = n / 10;
    }
    
    if (d == digit) {
        return 1;
    }
    else {
        return 0;
    }
}
